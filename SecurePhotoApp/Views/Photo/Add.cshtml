@model SecurePhotoApp.Models.PhotoVM
@{
    ViewData["Title"] = "Upload Photos";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="bg-white rounded-4 shadow-sm p-5">
                <div class="text-center mb-4">
                    <div class="feature-icon-wrapper mb-3">
                        <i class="bi bi-cloud-arrow-up text-white fs-3"></i>
                    </div>
                    <h1 class="fw-bold">Upload Your Photos</h1>
                    <p class="text-muted">Share your memories securely with friends and family</p>
                </div>

                <form asp-controller="Photo" asp-action="UploadFile" method="post" enctype="multipart/form-data" class="upload-form">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>

                    <div class="upload-area mb-4">
                        <input asp-for="myFiles" type="file" id="fileInput" class="file-input" multiple accept="image/*" />
                        <label for="fileInput" class="file-drop-area">
                            <div class="file-drop-icon">
                                <i class="bi bi-images fs-1 mb-3"></i>
                                <p class="fw-medium mb-2">Drag photos here or click to browse</p>
                                <p class="text-muted small">Supports JPG, PNG, GIF up to 10MB each</p>
                            </div>
                            <div class="selected-files-preview mt-3" id="selectedFiles">
                            </div>
                        </label>
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label fw-medium" for="PrivacySetting">Privacy Settings</label>
                        <select class="form-select" asp-for="PrivacySetting" id="privacySelector">
                            <option value="Private - Only me">Private - Only me</option>
                            <option value="Friends - Only people I choose">Friends - Only people I choose</option>
                            <option value="Public - Anyone with the link">Public - Anyone with the link</option>
                        </select>
                        <small class="form-text text-muted">
                            <i class="bi bi-info-circle me-1"></i> Control who can view your uploaded photos
                        </small>
                    </div>

                    <div class="form-group mb-4" id="friendsEmailsContainer" style="display: none;">
                        <label class="form-label fw-medium" for="FriendEmails">Friend Emails</label>
                        <textarea class="form-control" asp-for="FriendEmails" rows="3"
                                  placeholder="Enter email addresses separated by commas"></textarea>
                        <small class="form-text text-muted">
                            <i class="bi bi-info-circle me-1"></i> Only these people will be able to view your photos
                        </small>
                    </div>

                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="bi bi-cloud-arrow-up me-2"></i>Upload Photos
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .feature-icon-wrapper {
        background: linear-gradient(120deg, #4776E6 0%, #8E54E9 100%);
        width: 70px;
        height: 70px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .upload-area {
        position: relative;
    }

    .file-input {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        opacity: 0;
        cursor: pointer;
        z-index: 2;
    }

    .file-drop-area {
        border: 2px dashed #d1d5db;
        border-radius: 12px;
        padding: 3rem 2rem;
        text-align: center;
        background-color: #f9fafb;
        transition: all 0.3s ease;
        cursor: pointer;
        display: block;
    }

        .file-drop-area:hover, .file-input:focus + .file-drop-area {
            border-color: #4776E6;
            background-color: rgba(71, 118, 230, 0.05);
        }

    .file-drop-icon {
        color: #6b7280;
    }

    .selected-files-preview {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background: linear-gradient(120deg, #4776E6 0%, #8E54E9 100%);
        border: none;
        padding: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(71, 118, 230, 0.4);
        }

    .form-select, .form-control {
        padding: 0.75rem;
        border-radius: 8px;
        border: 1px solid #e2e8f0;
    }

        .form-select:focus, .form-control:focus {
            box-shadow: 0 0 0 3px rgba(71, 118, 230, 0.2);
            border-color: #4776E6;
        }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('fileInput');
            const selectedFiles = document.getElementById('selectedFiles');
            const dropArea = document.querySelector('.file-drop-area');
            const privacySelector = document.getElementById('privacySelector');
            const friendsEmailsContainer = document.getElementById('friendsEmailsContainer');

            privacySelector.addEventListener('change', function() {
                if (this.value === 'Friends - Only people I choose') {
                    friendsEmailsContainer.style.display = 'block';
                } else {
                    friendsEmailsContainer.style.display = 'none';
                }
            });

            if (privacySelector.value === 'Friends - Only people I choose') {
                friendsEmailsContainer.style.display = 'block';
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                dropArea.classList.add('border-primary');
                dropArea.style.backgroundColor = 'rgba(71, 118, 230, 0.1)';
            }

            function unhighlight() {
                dropArea.classList.remove('border-primary');
                dropArea.style.backgroundColor = '#f9fafb';
            }

            fileInput.addEventListener('change', function() {
                selectedFiles.innerHTML = '';
                if (this.files) {
                    for (let i = 0; i < Math.min(this.files.length, 8); i++) {
                        const file = this.files[i];
                        if (file.type.match('image.*')) {
                            const reader = new FileReader();

                            reader.onload = function(e) {
                                const img = document.createElement('img');
                                img.classList.add('thumbnail');
                                img.src = e.target.result;
                                selectedFiles.appendChild(img);
                            }

                            reader.readAsDataURL(file);
                        }
                    }

                    if (this.files.length > 8) {
                        const moreText = document.createElement('div');
                        moreText.classList.add('d-flex', 'align-items-center', 'justify-content-center');
                        moreText.style.width = '80px';
                        moreText.style.height = '80px';
                        moreText.style.background = 'rgba(71, 118, 230, 0.1)';
                        moreText.style.borderRadius = '8px';
                        moreText.style.fontWeight = '500';
                        moreText.innerHTML = `+${this.files.length - 8}`;
                        selectedFiles.appendChild(moreText);
                    }
                }
            });
        });
    </script>
}
